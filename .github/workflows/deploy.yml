name: Deploy to EC2

on: 
  push: 
    branch: main

jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest

    steps: 
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup nodejs
        uses: actions/setup-node@v2
        with: 
          node-version: '20.11'
        
      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "REFRESH_TOKEN_EXPIRATION=${{ secrets.REFRESH_TOKEN_EXPIRATION }}" >> .env
          echo "TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }}" >> .env
          echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> .env
          echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> .env
          echo "TWILIO_SERVICE_SID=${{ secrets.TWILIO_SERVICE_SID }}" >> .env
      
      - name: Build project
        run: npm run build
      
      - name: Achive build files
        run: zip -r dist.zip dist

      - name: Copy file to ec2
        uses: appleboy/scp-action@v0.1.3
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "dist.zip"
          target: "/home/ubuntu/shop_now/dist.zip"
        
      - name: Deploy EC2
        uses: appleboy/ssh-action@v1.0.3
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: | 
            cd /home/ubuntu/shop_now
            git pull
            if [ -d "dist" ]; then
              rm -rf dist
            fi
            uzip -o dist.zip
            pm2 restart all 
            sudo systemctl restart nginx